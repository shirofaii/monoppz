name: monoppz
colors:
  editor.background: "#1e1e1e"
  editor.foreground: "#b9b9b5"
tokenColors:
  - scope: "unimportant"
    settings:
      foreground: "#67618d"

  - scope: "keyword.type"
    settings:
      foreground: "#b6766b"
  - scope:
    - "keyword.control.loop"
    - "keyword.control.conditional"
    - "keyword.control.flow"
    - "keyword.control.context"
    - "keyword.control.exception"
    - "keyword.operator.expression"
    settings:
      foreground: "#847cb8"
  - scope:
    - "keyword.operator.assignment"
    - "keyword.operator.arrow"
    - "keyword.operator.logical"
    - "keyword.operator.arithmetic"
    - "keyword.operator.decrement"
    - "keyword.operator.increment"
    - "keyword.operator.relational"
    settings:
      foreground: "#b9b9b5"

  - scope: "variable.language"
    settings:
      foreground: "#806b5b"
  - scope: "constant.language"
    settings:
      foreground: "#6174d2"

  - scope:
    - "storage.modifier"
    - "storage.type"
    settings:
      foreground: "#735351"
  - scope: "storage.modifier.this"
    settings:
      foreground: "#9e8069"
  - scope:
    - "storage.modifier.out"
    - "storage.modifier.in"
    - "storage.modifier.ref"
    settings:
      foreground: "#86946C"
  - scope: "storage.type.var"
    settings:
      foreground: "#86946c"
  - scope: "storage.type.namespace"
    settings:
      foreground: "#67618d"
  - scope:
    - "storage.type.accessor"
    - "storage.type.operator"
    settings:
      foreground: "#4ca587"

  - scope: 
    - "punctuation.terminator"
    - "punctuation.accessor"
    - "punctuation.parenthesis"
    - "punctuation.squarebracket"
    - "punctuation.curlybrace"
    - "punctuation.separator"
    settings:
      foreground: "#72757c"
  - scope:
    - "punctuation.definition.string"
    - "punctuation.definition.char"
    settings:
      foreground: "#588e9b"
  - scope: "punctuation.definition.typeparameters"
    settings:
      foreground: "#735351"

  - scope: "string.quoted"
    settings:
      foreground: "#60c0d2"

# will be overriden by sematic tokens (required for compatibitly)

  - scope:
    - "entity.name.type"
    settings:
      foreground: "#b6766b"
  - scope: "entity.name.function"
    settings:
      foreground: "#4ca587"
  - scope: "entity.name.variable"
    settings:
      foreground: "#b0c87b"
  - scope:
    - "entity.name.variable.parameter"
    - variable.other"
    settings:
      foreground: "#d9c679"
  - scope: "variable.other.property"
    settings:
      foreground: "#cea37e"
  - scope: "constant.numeric"
    settings:
      foreground: "#609ad2"
  - scope:
    - "constant.string"
    - "constant.character"
    settings:
      foreground: "#60c0d2"
  - scope: "constant.character.escape"
    settings:
      foreground: "#588e9b"
  - scope: "comment"
    settings:
      foreground: "#575b65"

semanticHighlighting: true
semanticTokenColors:
  namespace: "#67618d"
  type: "#b6766b"
  struct: "#b6766b"
  class: "#b6766b"
  interface: "#b6766b"
  enum: "#b6766b"
  # keyword: "#ab9df2"
  function: "#4ca587"
  method: "#4ca587"
  macro: "#67618d"
  variable: "#b0c87b"
  parameter: "#d9c679"
  property: "#cea37e"
  enumMember: "#609ad2"
  event: "#4ca587"
  number: "#609ad2"
  comment: "#575b65"
  # operator: "#b9b9b5"
  # string: "#60c0d2"
  # punctuation: "#72757c"
  typeParameter: "#b6766b"
  stringEscapeCharacter: "#588e9b"
  excludedCode: "#575b65"
  preprocessorText: "#67618d"